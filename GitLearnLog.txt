1.设置用户名
    $ git config --global user.name "Your Name"
    $ git config --global user.email "email@example.com"
    ps  git config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。

2.创建版本库
    2.0创建仓库
        $ mkdir learngit
        $ cd learngit
        $ git init
    2.1添加文件到仓库
        $ git add readme.txt
    2.2提交文件到仓库
        $ git commit -m "wrote a readme file"

3.时光机穿梭
    3.1查看仓库状态
        $ git status          查看当前目录改动
        $ git status filename 查看指定目录或者文件改动
    3.2查看difference
        $ git diff            查看当前目录diff
        $ git diff filename   查看指定目录或者文件diff
    3.3查看历史
        $ git log
        $ git log --pretty=oneline  
        $ git log --graph 可以查看到分支图
    3.4回退版本
        $ git reset --hard HEAD^    回退到前一个版本     
        $ git reset --hard HEAD^^   回退到前两个版本
        $ git reset --hard HEAD~100 回退到前100个版本
        $ git reset --hard commitid 回退到指定commitid的版本
        ps  --hard参数有啥意义？
    3.5查看所有操作记录历史
        $ git reflog

4.工作区版本库和暂存区概念
    工作区:    用户修改和编辑
    暂存区:    git add    把工作区的修改保存到暂存区
    版本库:    git commit 把暂存区的修改保存到版本库
    $ git diff            实际上是工作区和暂存区的比较
    $ git diff --cached   暂存区和版本库的比较
    $ git diff HEAD --    查看工作区和版本库里面最新版本

5. 撤销工作区的修改
    5.1还未git add到暂存区
        $ git checkout -- readme.txt      回退工作区的readme.txt到暂存区版本
    5.2已经git add 但是还未git commit
        先 $ git reset HEAD -- readme.txt  回退暂存区的readme.txt到HEAD版本 
        再 $ git checkout -- readme.txt    回退工作区的readme.txt到暂存区版本 (同5.1)
    5.3直接checkout版本库到工作区
        $ git check HEAD^ -- readme.txt    回退工作区的readme.txt到版本库的指定版本

6.删除文件
    $ git rm

7.远程仓库
    7.1 https://github.com/ 创建新的仓库 learngit
    7.2 push本地仓库到远程仓库
        git remote add origin git@github.com:bagehe/learngit.git
        git push -u origin master
    7.3克隆远程仓库到本地
        git clone git@github.com:michaelliao/gitskills.git

8.分支管理
    8.1查看分支
        $ git branch
    8.2创建分支
        $ git branch <name>
    8.3切换分支
        $ git checkout <name>
    8.4创建+切换分支
        $ git checkout -b <name>
    8.5合并某分支到当前分支
        $ git merge <name>
    8.6删除分支
        $ git branch -d <name>  删除已被merge的分支
        $ git branch -D <name>  删除未被merge的分支
    8.7查看合并分支图
        $ git log --graph
    8.8查看远程仓库信息
        $ git remote        查看远程仓库名
        $ git remote -v     详细信息 查看远程仓库抓取和推送的地址
    8.9推送分支到远程仓库
        $ git push origin master
        $ git push origin dev
    8.10拉取远程仓库到本地
        $ git pull
    8.11绑定本地分支和远程分支
        $ git branch --set-upstream dev origin/dev
    8.12保存当前工作现场
        $ git stash
        $ git stash apply 恢复工作现场 不删除stash
        $ git stash drop  删除stash
        $ git stash pop   恢复工作现场 同时删除stash

9.标签管理
    
